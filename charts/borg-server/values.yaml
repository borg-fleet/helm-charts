# Default values for borg-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  borg:
    repository: ghcr.io/borg-fleet/borg
    pullPolicy: IfNotPresent
    tag: ""
  sssd:
    repository: ghcr.io/borg-fleet/sssd
    pullPolicy: IfNotPresent
    tag: ""


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  borg: {}
  sssd: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 22

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# specify additional volumes to mount in the core container, this can be used
# to specify additional storage of material or to inject files from ConfigMaps
# into the running container
additionalVolumes: []

# specify where the additional volumes are mounted in the core container
additionalVolumeMounts:
  borg: {}
  sssd: {}

resources:
  borg: {}
  sssd: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  sshd:
    Port: 22
    UsePam: 'yes'
    PermitRootLogin: 'no'
    PasswordAuthentication: 'yes'
    ChallengeResponseAuthentication: 'no'
    KerberosAuthentication: 'no'
    GSSAPIAuthentication: 'no'
    X11Forwarding: 'no'
    AllowAgentForwarding: 'no'
    AllowTcpForwarding: 'no'
    PermitTunnel: 'no'
    PermitUserEnvironment: 'no'
    PrintMotd: 'no'
    DebianBanner: 'no'
    ClientAliveInterval: 10
    ClientAliveCountMax: 30
    AuthorizedKeysCommandUser: sshd
    AuthorizedKeysCommand: /usr/bin/sss_ssh_authorizedkeys %u
    ForceCommand: borg serve --restrict-to-path "$${HOME}" --lock-wait 600 --append-only
  # this is a basic config that very likely dow not do what you want
  # for further information see https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system-level_authentication_guide/sssd
  sssd:
    sssd:
      domains: LOCAL
      services: nss
      config_file_version: 2

    nss:
      filter_groups: root
      filter_users: root

    domain/LOCAL:
      id_provider: files
      auth_provider: files
      access_provider: permit
